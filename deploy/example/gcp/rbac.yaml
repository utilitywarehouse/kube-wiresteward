apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: wiresteward-psp
spec:
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
    - NET_ADMIN
  volumes:
    - hostPath
    - secret
  hostNetwork: true
  hostPorts:
    - min: 51880
      max: 51880
  allowedHostPaths:
    - pathPrefix: '/var/lib/wiresteward'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: wiresteward-local
rules:
  - apiGroups: [""]
    resources:
      - nodes
    verbs:
      - watch
      - list
      - get
      - patch
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - wiresteward-psp
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: wiresteward-local
subjects:
  - kind: ServiceAccount
    name: wiresteward-local
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: wiresteward-local
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiresteward-local
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: wiresteward-remote
rules:
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: wiresteward-remote
subjects:
- kind: ServiceAccount
  name: wiresteward-remote
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: wiresteward-remote
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiresteward-remote
  namespace: kube-system
